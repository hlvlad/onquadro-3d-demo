{"version":3,"sources":["MolstarDemoViewer.ts","Viewer3D.tsx","App.js","index.js"],"names":["require","DefaultViewerOptions","layoutIsExpanded","layoutShowControls","layoutShowRemoteState","layoutShowSequence","layoutShowLeftPanel","layoutControlsDisplay","disableAntialiasing","pixelScale","enableWboit","viewportShowExpand","viewportShowSelectionMode","viewportShowAnimation","MolstarDemoViewer","element","options","plugin","currentStructure","o","spec","DefaultPluginSpec","actions","behaviors","animations","customParamEditors","layout","initial","isExpanded","showControls","controlsDisplay","controls","top","undefined","left","right","bottom","components","remoteState","config","PluginConfig","Viewport","ShowExpand","ShowAnimation","ShowSelectionMode","this","createPlugin","data","format","a","clear","leftPanelTabName","next","builders","rawData","label","dataLabel","_data","structure","parseTrajectory","trajectory","createModel","model","createStructure","repr","createStructureRepresentationParams","type","color","size","sizeParams","value","build","to","apply","StateTransforms","Representation","StructureRepresentation3D","commit","newRepresenation","console","log","update","Viewer3D","id","structure3d","structure3dAppearance","viewerRef","useRef","useState","molstarPlugin","setMolstarPlugin","useLayoutEffect","current","useEffect","loadStructureFromData","updateMoleculeRepresentation","ref","App","setStructure3d","setStructure3dAppearance","handleRadioChange","e","target","fetch","then","res","text","catch","error","Viewer3dProps","className","Form","Group","as","Row","Label","column","sm","Col","Check","checked","onChange","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kVAaAA,EAAQ,KAGR,IAAMC,EAAuB,CAC3BC,kBAAkB,EAClBC,oBAAoB,EACpBC,uBAAuB,EACvBC,oBAAoB,EACpBC,qBAAqB,EACrBC,sBAAuB,WACvBC,qBAAqB,EACrBC,WAAY,EACZC,aAAa,EAEbC,oBAAoB,EACpBC,2BAA2B,EAC3BC,uBAAuB,GAIZC,EAAb,WAIE,WAAYC,GAA6D,IAAvCC,EAAsC,uDAAJ,GAAI,yBAHxEC,YAGwE,OAFxEC,sBAEwE,EACtE,IAAMC,EAAC,2BAAQlB,GAAyBe,GAClCI,EAAgB,2BACjBC,KADiB,IAEpBC,QAAQ,YAAKD,IAAkBC,SAC/BC,UAAU,YAAKF,IAAkBE,WACjCC,WAAW,YAAKH,IAAkBG,YAAc,IAChDC,mBAAoBJ,IAAkBI,mBACtCC,OAAQ,CACNC,QAAS,CACPC,WAAYT,EAAEjB,iBACd2B,aAAcV,EAAEhB,mBAChB2B,gBAAiBX,EAAEZ,uBAErBwB,SAAS,2BACJV,IAAkBK,QAAUL,IAAkBK,OAAOK,UADlD,IAENC,IAAKb,EAAEd,wBAAqB4B,EAAY,OACxCC,KAAMf,EAAEb,yBAAsB2B,EAAY,OAC1CE,MAAO,OACPC,OAAQ,UAGZC,WAAW,2BACNhB,IAAkBgB,YADb,IAERC,YAAa,SAEfC,OAAQ,CACN,CAACC,IAAaC,SAASC,WAAYvB,EAAER,oBACrC,CAAC6B,IAAaC,SAASE,cAAexB,EAAEN,uBACxC,CAAC2B,IAAaC,SAASG,kBAAmBzB,EAAEP,8BAGhDiC,KAAK5B,OAAS6B,YAAa/B,EAASK,GApCxC,gGAuCE,WAA4B2B,EAA4BC,EAAiChC,GAAzF,uBAAAiC,EAAA,sEACQJ,KAAK5B,OAAOiC,QADpB,cAEEL,KAAK5B,OAAOM,UAAUG,OAAOyB,iBAAiBC,KAAK,QAFrD,SAGsBP,KAAK5B,OAAOoC,SAASN,KAAKO,QAAQ,CAAEP,OAAMQ,MAAK,OAAEvC,QAAF,IAAEA,OAAF,EAAEA,EAASwC,YAHhF,cAGQC,EAHR,gBAI2BZ,KAAK5B,OAAOoC,SAASK,UAAUC,gBAAgBF,EAAOT,GAJjF,cAIQY,EAJR,iBAKsBf,KAAK5B,OAAOoC,SAASK,UAAUG,YAAYD,GALjE,WAKQE,EALR,2EAO0BjB,KAAK5B,OAAOoC,SAASK,UAAUK,gBAAgBD,GAPzE,eAOQJ,EAPR,OAQQM,EAAOC,YAAoCpB,KAAK5B,YAAQ,EAAQ,CACpEiD,KAAM,iBACNC,MAAO,WACPC,KAAM,UACNC,WAAY,CAACC,MAAO,KAZxB,UAcgCzB,KAAK5B,OAAOsD,QAAQC,GAAGd,GAAWe,MAAMC,IAAgBC,eAAeC,0BAA2BZ,GAAMa,SAdxI,QAcEhC,KAAK3B,iBAdP,wDAvCF,4IAwDE,WAAmCgD,GAAnC,eAAAjB,EAAA,6DACQ6B,EAAmBb,YAAoCpB,KAAK5B,YAAQ,EAAQ,CAChFiD,KAAMA,EACNC,MAAO,WACPC,KAAM,UACNC,WAAY,CAACC,MAAO,KAEtBS,QAAQC,IAAR,0DAA+Dd,IAPjE,SAQQrB,KAAK5B,OAAOsD,QAAQC,GAAG3B,KAAK3B,kBAAkB+D,OAAOH,GAAkBD,SAR/E,gDAxDF,8D,SCSeK,EAjCE,SAAC,GAA8D,IAA7DC,EAA4D,EAA5DA,GAAIC,EAAwD,EAAxDA,YAAaC,EAA2C,EAA3CA,sBAC5BC,EAAYC,iBAAuB,MADoC,EAEnCC,qBAFmC,mBAEtEC,EAFsE,KAEvDC,EAFuD,KA0B7E,OAtBAC,2BAAgB,WACW,MAArBL,EAAUM,SACZF,EAAiB,IAAI5E,EAAkBwE,EAAUM,YAElD,IAEHC,qBAAU,WACJJ,GACCL,IACDL,QAAQC,IAAII,GACZK,EAAcK,sBAAsBV,EAAa,YAGpD,CAACK,EAAeL,IAEnBS,qBAAU,WACHJ,GACDA,EAAcM,6BAA6BV,KAE9C,CAACA,IAIA,qBAAKF,GAAIA,EAAT,SACE,qBAAKA,GAAG,WAAWa,IAAKV,O,2BCuBjBW,MArDf,WAAgB,IAAD,EAC2BT,mBAAS,MADpC,mBACJJ,EADI,KACSc,EADT,OAE+CV,mBAAS,kBAFxD,mBAEJH,EAFI,KAEmBc,EAFnB,KAqBX,SAASC,EAAkBC,GACvBF,EAAyBE,EAAEC,OAAOhC,OALtCuB,qBAAU,WAZNU,MAAM,wBACDC,MAAK,SAASC,GACX,OAAOA,EAAIC,UAEdF,MAAK,SAAS9C,GACXwC,EAAexC,MAElBiD,OAAM,SAASN,GACZtB,QAAQ6B,MAAMP,QAMvB,IAMH,IAAMQ,EAAgB,CAClBzB,cACAC,yBAGJ,OACA,sBAAKyB,UAAU,MAAf,UACI,qBAAK3B,GAAG,oBAAR,SACI,cAAC4B,EAAA,EAAD,UACI,mCACI,eAACA,EAAA,EAAKC,MAAN,CAAYC,GAAIC,IAAhB,UACI,cAACH,EAAA,EAAKI,MAAN,CAAYF,GAAG,SAASG,QAAM,EAACC,GAAI,EAAnC,qCAGA,eAACC,EAAA,EAAD,CAAKD,GAAI,GAAT,UACI,cAACN,EAAA,EAAKQ,MAAN,CAAarD,KAAK,QAAQX,MAAM,iBAAiBiE,QAAmC,mBAA1BnC,EAA4Cf,MAAM,iBAAiBmD,SAAUrB,IACvI,cAACW,EAAA,EAAKQ,MAAN,CAAarD,KAAK,QAAQX,MAAM,UAAUiE,QAAmC,YAA1BnC,EAAqCf,MAAM,UAAUmD,SAAUrB,IAClH,cAACW,EAAA,EAAKQ,MAAN,CAAarD,KAAK,QAAQX,MAAM,QAAQiE,QAAmC,UAA1BnC,EAAmCf,MAAM,QAAQmD,SAAUrB,gBAMlI,cAAC,EAAD,aAAUjB,GAAG,oBAAuB0B,QClD1Ca,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2c9f6e71.chunk.js","sourcesContent":["import \"molstar/lib/mol-util/polyfill\";\nimport { createPlugin, DefaultPluginSpec } from \"molstar/lib/mol-plugin\";\nimport { PluginContext } from \"molstar/lib/mol-plugin/context\";\nimport { PluginSpec } from \"molstar/lib/mol-plugin/spec\";\nimport { PluginLayoutControlsDisplay } from \"molstar/lib/mol-plugin/layout\";\nimport { PluginConfig } from \"molstar/lib/mol-plugin/config\";\nimport { BuiltInTrajectoryFormat } from \"molstar/lib/mol-plugin-state/formats/trajectory\";\nimport { createStructureRepresentationParams } from \"molstar/lib/mol-plugin-state/helpers/structure-representation-params\";\nimport { StateTransforms } from \"molstar/lib/mol-plugin-state/transforms\";\nimport {\n  applyBuiltInSelection,\n} from \"molstar/lib/mol-plugin-state/helpers/structure-selection-query\";\n\nrequire(\"molstar/lib/mol-plugin-ui/skin/light.scss\");\n\n\nconst DefaultViewerOptions = {\n  layoutIsExpanded: false,\n  layoutShowControls: true,\n  layoutShowRemoteState: false,\n  layoutShowSequence: true,\n  layoutShowLeftPanel: true,\n  layoutControlsDisplay: \"reactive\" as PluginLayoutControlsDisplay,\n  disableAntialiasing: false,\n  pixelScale: 1,\n  enableWboit: false,\n\n  viewportShowExpand: true,\n  viewportShowSelectionMode: false,\n  viewportShowAnimation: false\n};\ntype ViewerOptions = typeof DefaultViewerOptions;\n\nexport class MolstarDemoViewer {\n  plugin: PluginContext;\n  currentStructure: any;\n\n  constructor(element: HTMLElement, options: Partial<ViewerOptions> = {}) {\n    const o = { ...DefaultViewerOptions, ...options };\n    const spec: PluginSpec = {\n      ...DefaultPluginSpec,\n      actions: [...DefaultPluginSpec.actions],\n      behaviors: [...DefaultPluginSpec.behaviors],\n      animations: [...DefaultPluginSpec.animations || []],\n      customParamEditors: DefaultPluginSpec.customParamEditors,\n      layout: {\n        initial: {\n          isExpanded: o.layoutIsExpanded,\n          showControls: o.layoutShowControls,\n          controlsDisplay: o.layoutControlsDisplay\n        },\n        controls: {\n          ...DefaultPluginSpec.layout && DefaultPluginSpec.layout.controls,\n          top: o.layoutShowSequence ? undefined : \"none\",\n          left: o.layoutShowLeftPanel ? undefined : \"none\",\n          right: \"none\",\n          bottom: \"none\"\n        }\n      },\n      components: {\n        ...DefaultPluginSpec.components,\n        remoteState: \"none\"\n      },\n      config: [\n        [PluginConfig.Viewport.ShowExpand, o.viewportShowExpand],\n        [PluginConfig.Viewport.ShowAnimation, o.viewportShowAnimation],\n        [PluginConfig.Viewport.ShowSelectionMode, o.viewportShowSelectionMode]\n      ]\n    }\n    this.plugin = createPlugin(element, spec);\n  }\n\n  async loadStructureFromData(data: string | ArrayBuffer, format: BuiltInTrajectoryFormat, options?: { dataLabel?: string, structureRepresentation3D: string }) {\n    await this.plugin.clear();\n    this.plugin.behaviors.layout.leftPanelTabName.next(\"data\");\n    const _data = await this.plugin.builders.data.rawData({ data, label: options?.dataLabel });\n    const trajectory = await this.plugin.builders.structure.parseTrajectory(_data, format);\n    const model = await this.plugin.builders.structure.createModel(trajectory);\n    if (!model) return;\n    const structure = await this.plugin.builders.structure.createStructure(model);\n    const repr = createStructureRepresentationParams(this.plugin, void 0, {\n      type: 'ball-and-stick',\n      color: 'chain-id',\n      size: 'uniform',\n      sizeParams: {value: 2.0}\n    });\n    this.currentStructure = await this.plugin.build().to(structure).apply(StateTransforms.Representation.StructureRepresentation3D, repr).commit();\n  }\n\n  async updateMoleculeRepresentation(type: \"ball-and-stick\" | \"cartoon\" | \"putty\") {\n    const newRepresenation = createStructureRepresentationParams(this.plugin, void 0, {\n      type: type,\n      color: 'chain-id',\n      size: 'uniform',\n      sizeParams: {value: 2.0}\n    });\n    console.log(`Trying to update structure 3D Representation to ${type}`)\n    await this.plugin.build().to(this.currentStructure).update(newRepresenation).commit();\n  }\n}\n","import React, { useEffect, useLayoutEffect, useRef, useState } from \"react\";\nimport { MolstarDemoViewer } from \"./MolstarDemoViewer\";\n\ntype Viewer3DProps = {\n  id: string,\n  structure3d: string | ArrayBuffer,\n  structure3dAppearance: \"ball-and-stick\" | \"cartoon\" | \"putty\"\n}\n\nconst Viewer3D = ({id, structure3d, structure3dAppearance} : Viewer3DProps) => {\n  const viewerRef = useRef<HTMLDivElement>(null);\n  const [molstarPlugin, setMolstarPlugin] = useState<MolstarDemoViewer | undefined>();\n\n  useLayoutEffect(() => {\n    if (viewerRef.current != null) {\n      setMolstarPlugin(new MolstarDemoViewer(viewerRef.current));\n    }\n  }, [])\n\n  useEffect(() => {\n    if (molstarPlugin) {\n      if(structure3d) {\n        console.log(structure3d);\n        molstarPlugin.loadStructureFromData(structure3d, \"mmcif\")\n      }\n    }\n  }, [molstarPlugin, structure3d]);\n\n  useEffect(() => {\n      if(molstarPlugin) {\n        molstarPlugin.updateMoleculeRepresentation(structure3dAppearance)\n      }\n  }, [structure3dAppearance])\n\n\n  return (\n      <div id={id}>\n        <div id=\"viewer3d\" ref={viewerRef} />\n      </div>\n  )\n}\n\nexport default Viewer3D;\n","import './App.css';\nimport Viewer3D from './Viewer3D';\nimport Form from 'react-bootstrap/Form';\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport {useEffect, useState} from \"react\";\n\nfunction App() {\n    const [structure3d, setStructure3d] = useState(null);\n    const [structure3dAppearance, setStructure3dAppearance] = useState(\"ball-and-stick\");\n\n    function getStructure() {\n        fetch('data/coordinates.cif')\n            .then(function(res) {\n                return res.text()\n            })\n            .then(function(structure) {\n                setStructure3d(structure);\n            })\n            .catch(function(e) {\n                console.error(e);\n            })\n    }\n\n    useEffect(() => {\n        getStructure();\n    }, [])\n\n    function handleRadioChange(e) {\n        setStructure3dAppearance(e.target.value)\n    }\n\n    const Viewer3dProps = {\n        structure3d,\n        structure3dAppearance\n    }\n\n    return (\n    <div className=\"App\">\n        <div id=\"viewer3d-controls\">\n            <Form>\n                <fieldset>\n                    <Form.Group as={Row}>\n                        <Form.Label as=\"legend\" column sm={2}>\n                            3D structure appearance\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Check  type='radio' label='Ball and stick' checked={structure3dAppearance === \"ball-and-stick\"} value='ball-and-stick' onChange={handleRadioChange}/>\n                            <Form.Check  type='radio' label='Cartoon' checked={structure3dAppearance === \"cartoon\"} value=\"cartoon\" onChange={handleRadioChange}/>\n                            <Form.Check  type='radio' label='Putty' checked={structure3dAppearance === \"putty\"} value=\"putty\" onChange={handleRadioChange}/>\n                        </Col>\n                    </Form.Group>\n                </fieldset>\n            </Form>\n        </div>\n      <Viewer3D id=\"viewer3d-wrapper\" {...Viewer3dProps}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}